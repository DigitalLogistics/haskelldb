# HaskellDB configuration file. configure will produce config.mk from this file
# @configure_input@

PACKAGE_VERSION = @PACKAGE_VERSION@

CC = @CC@

GHC = @GHC@
GHCI = @GHCI@
GHC_PKG = @GHC_PKG@
GHCFLAGS = @GHCFLAGS@
GHC_DIR = @GHC_DIR@

HUGS = @HUGS@
RUNHUGS = @RUNHUGS@
HUGSFLAGS = @HUGSFLAGS@
HUGS_DIR = @HUGS_DIR@

HADDOCK = @HADDOCK@

WIN32=@WIN32@
AR = @AR@
LD = @LD@
INSTALL = @INSTALL@
LDFLAGS = @LDFLAGS@

PACKAGE_DEPS = @PACKAGE_DEPS@

#
# Which compilers to build libraries for
#

ENABLE_GHC = @ENABLE_GHC@
ENABLE_HUGS = @ENABLE_HUGS@

ifeq "$(ENABLE_GHC)" "yes"
COMPILERS += ghc
endif

ifeq "$(ENABLE_HUGS)" "yes"
COMPILERS += hugs
endif

#
# HSQL stuff
#

WITH_HSQL = @WITH_HSQL@

ifeq "$(WITH_HSQL)" "yes"
DRIVERS += HSQL
endif

WITH_HSQL_ODBC = @WITH_HSQL_ODBC@
WITH_HSQL_MYSQL = @WITH_HSQL_MYSQL@
WITH_HSQL_SQLITE = @WITH_HSQL_SQLITE@
WITH_HSQL_POSTGRESQL = @WITH_HSQL_POSTGRESQL@

ifeq "$(WITH_HSQL_ODBC)" "yes"
HSQL_DRIVERS += ODBC
HSPP_FLAGS += -DWITH_HSQL_ODBC
endif

ifeq "$(WITH_HSQL_MYSQL)" "yes"
HSQL_DRIVERS += MySQL
HSPP_FLAGS += -DWITH_HSQL_MYSQL
endif

ifeq "$(WITH_HSQL_SQLITE)" "yes"
HSQL_DRIVERS += SQLite
HSPP_FLAGS += -DWITH_HSQL_SQLITE
endif

ifeq "$(WITH_HSQL_POSTGRESQL)" "yes"
HSQL_DRIVERS += PostgreSQL
HSPP_FLAGS += -DWITH_HSQL_POSTGRESQL
endif

#
# WxHaskell stuff
#

WITH_WX = @WITH_WX@

ifeq "$(WITH_WX)" "yes"
DRIVERS += WX
HSPP_FLAGS += -DWITH_WX
endif

#
# BoundedString
#

WITH_BOUNDEDSTRING = @WITH_BOUNDEDSTRING@

ifeq "$(WITH_BOUNDEDSTRING)" "yes"
HSPP_FLAGS += -DWITH_BOUNDEDSTRING
endif

#
# Preprocessing
#

HSPP = $(TOP_DIR)/preprocess $(HSPP_FLAGS)

#
# Include local HaskellDB dirs
#

SRC_DIR = $(TOP_DIR)/src

BUILD_DIR = $(TOP_DIR)/build

GHCFLAGS += $(addprefix -i, $(BUILD_DIR))
HUGSFLAGS += $(patsubst %, -P%:, $(BUILD_DIR))
# order is significant here
LDFLAGS := -L$(BUILD_DIR) -lHShdb $(LDFLAGS)

GHCFLAGS += $(shell echo $(PACKAGE_DEPS) | sed 's/,/ -package /g')

