{-# LANGUAGE EmptyDataDecls, TypeSynonymInstances #-}
{-# OPTIONS_GHC -fcontext-stack44 #-}
---------------------------------------------------------------------------
-- Generated by DB/Direct
---------------------------------------------------------------------------
module DB1.Int_tbl where

import Database.HaskellDB.DBLayout

---------------------------------------------------------------------------
-- Table type
---------------------------------------------------------------------------

type Int_tbl =
    (RecCons F01 (Expr (Maybe Int))
     (RecCons F02 (Expr Int)
      (RecCons F03 (Expr (Maybe Int))
       (RecCons F04 (Expr Int) RecNil))))

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
int_tbl :: Table Int_tbl
int_tbl = baseTable "int_tbl" $
          hdbMakeEntry F01 #
          hdbMakeEntry F02 #
          hdbMakeEntry F03 #
          hdbMakeEntry F04

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- F01 Field
---------------------------------------------------------------------------

data F01 = F01

instance FieldTag F01 where fieldName _ = "f01"

f01 :: Attr F01 (Maybe Int)
f01 = mkAttr F01

---------------------------------------------------------------------------
-- F02 Field
---------------------------------------------------------------------------

data F02 = F02

instance FieldTag F02 where fieldName _ = "f02"

f02 :: Attr F02 Int
f02 = mkAttr F02

---------------------------------------------------------------------------
-- F04 Field
---------------------------------------------------------------------------

data F04Tag
type F04 = Proxy F04Tag
instance ShowLabel F04 where showLabel _ = "f04"

f04 :: F04
f04 = proxy

---------------------------------------------------------------------------
-- Table type
---------------------------------------------------------------------------

type T1 =
    Record (HCons (LVPair F1 (Expr (Maybe Int)))
            (HCons (LVPair F2 (Expr (Maybe Int))) HNil))

---------------------------------------------------------------------------
-- Table
---------------------------------------------------------------------------
t1 :: Table T1
t1 = baseTable "t1"

---------------------------------------------------------------------------
-- Fields
---------------------------------------------------------------------------
---------------------------------------------------------------------------
-- F1 Field
---------------------------------------------------------------------------

data F1Tag
type F1 = Proxy F1Tag
instance ShowLabel F1 where
    showLabel _ = "f1"

f1 :: F1
f1 = proxy

---------------------------------------------------------------------------
-- F2 Field
---------------------------------------------------------------------------

data F2Tag
type F2 = Proxy F2Tag
instance ShowLabel F2 where showLabel _ = "f2"

f2 :: F2
f2 = proxy

