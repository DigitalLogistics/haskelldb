Things that need to be done, in no particular order:

- Code:
  * Handle exceptions in a driver-independent way
  * Support all SQL datatypes
    - DATE, TIME, TIMESTAMP
  * Make row retrieval lazy in HSQL driver
  * Make Query.exprs type safe
  * switch ad-hoc assert to Control.Expcetion.assert
  * change insert to work like insertNew and remove insertNew 
    (is this a good idea?)
  * make {odbc,mysql,postgresql}Connect take a Database argument 
    instead of a HSQL argument. This would allow more general type
    signatures in user code. (Added by Bjorn)
  (* strictness checking. In other words: optimize the code to sort out what
     types and expressions are evaluated strictly, and explicitly tell the
     compiler that they are strict)
  (* maybe make it work on multi-processor systems using Concurrent Haskell?)

- DbDirect 
  (* add optional command line argument for selecting which
  tables to generate code for)

- Installation
  * GHC package specification
  * Packages (separate binary packages for Hugs and GHC?))
    - Source tarball
    - Linux binary and source RPMs 
    - Windows installer (MSI?)

- Build system
  * Automatic configuration (autoconf or something)
  * Get it to work with GHCi. There is s problem where
    GHCi is looking for libHSsql.so, which does not exist. (Added by Bjorn)

- More database drivers
  * wxHaskell

- Documentation
  * Haddock comments on all exported functions, classes and types
  * Tutorial
  * Example programs

- Testing
  * Test on Windows, Solaris, Linux, Mac OS X
  * Test against different DB systems, at least MySQL, PostgreSQL,
    Oracle
  * Test under GHC and Hugs
  * Test all functions
  * Test all datatypes
  * Test NULL and NOT NULL fields

- Misc
  * Get an allocated name in the hierarchical library namespace 
    (Database.HaskellDB?)
  * Figure out some sensible module naming strategy. E.g.:
    Database.HaskellDB
        (main module that users import)
    Database.HaskellDB.{Query,Primquery,Sql, ...} 
        (HaskellDB internals)
    Database.HaskellDB.DbDirect
	(DbDirect)
    Database.HaskellDB.Drivers
	(possibly some code for runtime driver selection)
    Database.HaskellDB.Drivers.HSQL.Internals
	(common code for talking to HSQL)
    Database.HaskellDB.Drivers.HSQL.{ODBC,MySQL,PostgreSQL} 
        (HSQL driver-specific code)
