Things that must de done before the release:
  * Get date types working.
  * Change insert and insertNew names.
  * Fix SqlNoData error from ODBC when the connection fails.
  * Get Windows build working without needing configure flags.
  (* Make DbDirect support all drivers)
  * Make sure there is a working relase or CVS snapshot of HSQL available.
  * Convert all existing file headers to haddock format.
  * Make sure all source files have headers (with copyright notices).
  * Remove passwords from all test files.
  * Add AUTHORS file.
  * Write release notes, including reasonably detailed changes 
    from the original haskellDB, and missing features.
  * Finish website.
    - Describe requirements, and link to HSQL, unixODBC etc.
    - Add a simple example program, including db table layout.

Doing the release:
  * Build haddock doc and put on website.
  * Build tarballs and put on website.
  * Put news item and release notes on website.
  * Announce on haskell@haskell.org.
  * Announce on #haskell.


Things that need to be done, in no particular order:

- Code:
  * Handle exceptions in a driver-independent way
    (kind of fixed now, by catching driver exceptions and 
    calling fail in the IO monad /Bjorn) 
  * Support all SQL datatypes
  * Make row retrieval lazy in HSQL driver
  * Make Query.exprs type safe
  * switch ad-hoc assert to Control.Expcetion.assert
  * change insert to work like insertNew and remove insertNew 
    (is this a good idea?)
  * make {odbc,mysql,postgresql}Connect take a Database argument 
    instead of a HSQL argument. This would allow more general type
    signatures in user code. (Added by Bjorn)
  (* strictness checking. In other words: optimize the code to sort out what
     types and expressions are evaluated strictly, and explicitly tell the
     compiler that they are strict)
  (* maybe make it work on multi-processor systems using Concurrent Haskell?)
  (* try to compile with nhc98. It would be nice to support all three 
     available Haskell compilers)

- DbDirect 
  (* add optional command line argument for selecting which
  tables to generate code for)
  * make DbDirect use any driver, preferrable selecting driver at
    run time /Bjorn

- Installation
  * Install targets should install DbDirect and the documentation.
  * Packages (separate binary packages for Hugs and GHC?))
    - Source tarball
    - Linux binary and source RPMs (debs, ebuild?)
    - Windows installer (MSI?)

- Build system 
  * Get it to work with GHCi. Currently there is a
    problem with HSQL and GHCi: "can't load .so/.DLL for: c
    (/usr/lib/libc.so: invalid ELF header)" (Added by Bjorn)

- Database drivers
  * Add more drivers:
    - wxHaskell

- Documentation
  * Haddock comments on all exported functions, classes and types
  * Tutorial
  * Example programs

- Testing
  * Test on Windows, Solaris, Linux, Mac OS X
  * Test against different DB systems, at least MySQL, PostgreSQL,
    Oracle
  * Test under GHC and Hugs
  * Test all functions
  * Test all datatypes
  * Test NULL and NOT NULL fields

- Misc
  * Get an allocated name in the hierarchical library namespace 
    (Database.HaskellDB?)

