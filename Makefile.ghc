COMPILER_DIR=$(BUILD_DIR)/ghc

WITH_HSQL = $(WITH_GHC_HSQL)
WITH_HSQL_ODBC = $(WITH_GHC_HSQL_ODBC)
WITH_HSQL_MYSQL = $(WITH_GHC_HSQL_MYSQL)
WITH_HSQL_SQLITE = $(WITH_GHC_HSQL_SQLITE)
WITH_HSQL_POSTGRESQL = $(WITH_GHC_HSQL_POSTGRESQL)
WITH_WX = $(WITH_GHC_WX)
WITH_PLUGINS = $(WITH_GHC_PLUGINS)

include common.mk

#this should likely be done somewhere else, and in a nicer way!
#we strip all -package from GHCFLAGS so we can redefine it later...
GHCFLAGS := $(subst -package hsql,,$(GHCFLAGS))
GHCFLAGS := $(subst -package wxcore,,$(GHCFLAGS))
GHCFLAGS := $(subst -package plugins,,$(GHCFLAGS))

GHCFLAGS += $(addprefix -i, $(COMPILER_DIR))

#this is so ugly...
DBDIRECT_GHCFLAGS := $(GHCFLAGS)
ifeq "$(WITH_HSQL)" "yes"
DBDIRECT_GHCFLAGS += -package hsql
endif
ifeq "$(WITH_WX)" "yes"
DBDIRECT_GHCFLAGS += -package wxcore
endif
ifeq "$(WITH_PLUGINS)" "yes"
DBDIRECT_GHCFLAGS += -package plugins
endif

GHCFLAGS += -package-name haskelldb

LDFLAGS := -L$(COMPILER_DIR) -lHShdb $(LDFLAGS)

OBJS = $(patsubst %.hs, %.o, $(SRC))

OBJ_HSQL = $(patsubst %.hs, %.o, $(SRC_HSQL))
OBJ_WX = $(patsubst %.hs, %.o, $(SRC_WX))
OBJ_PLUGINS = $(patsubst %.hs, %.o, $(SRC_PLUGINS))

all: $(COMPILER_DIR)/libHShdb.a $(PROGRAMS)

$(COMPILER_DIR)/libHShdb.a: $(OBJS)
	$(AR) -rc $@ $(filter %.o, $^)

$(COMPILER_DIR)/Database/HaskellDB/BoundedList.o: GHCFLAGS += -fallow-undecidable-instances

$(COMPILER_DIR)/Database/HaskellDB/DriverAPI.o: GHCFLAGS += -Onot

$(COMPILER_DIR)/$(OBJ_HSQL): GHCFLAGS += -package hsql

$(COMPILER_DIR)/$(OBJ_WX): GHCFLAGS += -package wxcore

$(COMPILER_DIR)/$(OBJ_PLUGINS): GHCFLAGS += -package plugins

$(COMPILER_DIR)/DBDirect: GHCFLAGS = $(DBDIRECT_GHCFLAGS)

%: %.o
	$(GHC) $(GHCFLAGS) $^ $(LDFLAGS) -o $@


%.o: %.hs
	$(GHC) $(GHCFLAGS) -c $^ -o $@

%.hi: %.o
	@:

install: all haskelldb.pkg install-filesonly
	-cd $(GHC_DIR); rm -f HShdb.o
	$(GHC_PKG) -u --auto-ghci-libs -i haskelldb.pkg

install-filesonly: all
	cd build/ghc; tar -cf ghc-interfaces.tar `find Database -name '*.hi' -print`
	cp build/ghc/ghc-interfaces.tar $(GHC_DIR)/imports
	cd $(GHC_DIR)/imports; tar -xf ghc-interfaces.tar; rm -f ghc-interfaces.tar
	cd build/ghc; cp libHShdb.a $(GHC_DIR)

uninstall:
	-cd $(GHC_DIR)/imports; rm -rf Database/HaskellDB*
	-cd $(GHC_DIR); rm -f libHShdb.a HShdb.o
	-$(GHC_PKG) -r haskelldb

# cleaning up

clean: 
	-rm -f .depend*

# dependencies

depend: .depend.nodep .depend.hsql .depend.wx .depend.plugins

.depend.nodep: $(SRC_NODEP) $(PROG_SRC)
	$(GHC) -M -optdep-f -optdep.depend.nodep $(GHCFLAGS) $^
include .depend.nodep

ifeq "$(WITH_HSQL)" "yes"
.depend.hsql: $(SRC_HSQL)
	$(GHC) -M -optdep-f -optdep.depend.hsql -package hsql $(GHCFLAGS) $^
include .depend.hsql
endif

ifeq "$(WITH_WX)" "yes"
.depend.wx: $(SRC_WX)
	$(GHC) -M -optdep-f -optdep.depend.wx -package wxcore $(GHCFLAGS) $^
include .depend.wx
endif

ifeq "$(WITH_PLUGINS)" "yes"
.depend.plugins: $(SRC_PLUGINS)
	$(GHC) -M -optdep-f -optdep.depend.plugins -package plugins $(GHCFLAGS) $^
include .depend.plugins
endif
