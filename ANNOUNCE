We are pleased to announce the second alpha release of our "remake" of
HaskellDB, version 0.6. The main feature of this release is our 
implementation of bounded lists, which may even be interesting 
outside of HaskellDB. Read on below for more information about it.

HaskellDB is a Haskell library for expressing database queries and
operations in a type safe and declarative way. HaskellDB compiles a
relational algebra-like syntax into SQL, submits the operations to the
database for processing, and returns the results as ordinary Haskell
values.

The original version of HaskellDB was written by Daan Leijen and is
available at http://www.haskell.org/haskellDB/. The implementation is 
based on his paper which can be found at:  
http://www.cs.uu.nl/people/daan/download/papers/dsec.ps

New in HaskellDB 0.6:

- Bounded lists and bounded strings (see below)
- Vastly increased performance. On reasonably modern computers, I/O is now 
  the limiting factor when doing database operations
- Transactions are now supported
- Some error messages (esp. some type errors) are easier to understand
- Better documentation
- Many, many bug fixes

About bounded lists:
The main idea of bounded lists is to create lists with predetermined
maximum sizes.

BoundedList is a simple, fast and type safe approach to implementing this 
idea. The implementation is based on inductive instances, making it very 
easy to expand with new bounds. A new bound only requires one instance of 
Size and two instances of Less.   
      
NOTE: Due to changes in DbDirect, any files generated using the old 
version of HaskellDB should be regenerated.

The developers can be reached at haskelldb-users@lists.sourceforge.net or
on #haskelldb at irc.freenode.net.

/ The HaskellDB development team
